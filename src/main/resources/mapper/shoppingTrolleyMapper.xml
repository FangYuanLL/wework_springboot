<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.wework.dao.shoppingTrolleyMapper" >
  <resultMap id="BaseResultMap" type="com.example.wework.model.shoppingTrolley" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="house_id" property="houseId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="empty" property="empty" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, house_id, customer_id, type, number, date, empty
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shoppingtrolley
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shoppingtrolley
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.wework.model.shoppingTrolley" >
    insert into shoppingtrolley (id, house_id, customer_id, 
      type, number, date, 
      empty)
    values (#{id,jdbcType=INTEGER}, #{houseId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, #{date,jdbcType=VARCHAR}, 
      #{empty,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.wework.model.shoppingTrolley" >
    insert into shoppingtrolley
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="empty != null" >
        empty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="empty != null" >
        #{empty,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wework.model.shoppingTrolley" >
    update shoppingtrolley
    <set >
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="empty != null" >
        empty = #{empty,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wework.model.shoppingTrolley" >
    update shoppingtrolley
    set house_id = #{houseId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      date = #{date,jdbcType=VARCHAR},
      empty = #{empty,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>